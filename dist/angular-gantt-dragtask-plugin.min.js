/*
Project: angular-gantt v1.2.7 - Gantt chart component for AngularJS
Authors: Marco Schweighauser, RÃ©mi Alvergnat
License: MIT
Homepage: https://www.angular-gantt.com
Github: https://github.com/angular-gantt/angular-gantt.git
*/

!function(){"use strict";for(var a,b="gantt.dragtask",c="ganttDragTask",d=["gantt",{module:"ngDragDrop",url:"https://github.com/codef0rmer/angular-dragdrop.git#master"}],e=[],f=["gantt.dragtask.templates"],g=0,h=d.length;h>g;g++){var i=d[g];try{angular.isString(i)&&(i={module:i},d[g]=i),angular.module(i.module),f.push(i.module)}catch(j){i.exception=j,e.push(i)}}e.length>0?angular.module(b,[]).directive(c,["$log",function(d){return{restrict:"E",require:"^gantt",scope:{enabled:"=?"},link:function(){d.warn(b+" module can't require some dependencies:");for(var f=0,g=e.length;g>f;f++){a=e[f];var h=a.module;a.url&&(h+=" ("+a.url+")"),a.exception&&a.exception.message&&(h+=": "+a.exception.message),d.warn(h)}d.warn(c+" plugin directive won't be available")}}}]):angular.module(b,f).directive(c,["$log","$templateCache",function(a,b){return{restrict:"E",require:"^?gantt",templateUrl:function(a,c){var d;return d=void 0===c.templateUrl?"plugins/dragtask/dragTask.tmpl.html":c.templateUrl,c.template&&b.put(d,c.template),d},replace:!0,scope:{task:"=",enabled:"=?"},link:function(b){var c,d=angular.element("div[gantt]").isolateScope();angular.isDefined(b.task)&&angular.isDefined(d)&&null!==d&&angular.isDefined(d.gantt)?c=d.gantt.api:a.warn("ganttCtrl is null or undefined"),b.jqyouiOptions={revert:"invalid",cursorAt:{left:0,top:0},scroll:!0},void 0===b.enabled&&(b.enabled=!0),b.dragActive=!1,b.onStart=function(){b.dragActive=!0;var a=c.gantt.columnsManager.getFirstColumn();angular.isDefined(a)&&(b.task.width=Math.round(a.width*(60*b.task.data.duration*1e3/a.duration)))},b.onStop=function(){b.dragActive=!1}}}}])}(),angular.module("gantt.dragtask.templates",[]).run(["$templateCache",function(a){a.put("plugins/dragtask/dragTask.tmpl.html",'<div ng-model="task" data-drag="enabled" data-jqyoui-options="jqyouiOptions" jqyoui-draggable="{onStart:\'onStart\', onStop :\'onStop\'}">\n    <div ng-if="!dragActive" class="btn-drag btn btn-default" ng-class="{\'btn-info\': task.selected}" ng-click="select(event)"><span class="glyphicon glyphicon-move"></span></div>\n    <div ng-if="dragActive" class="gantt-task" ng-class="task.classes" ng-style="{\'height\': \'1.6em\', \'width\': task.width +\'px\', \'z-index\': 1000}">\n        <!--<gantt-task-background></gantt-task-background>-->\n        <div class="gantt-task-background" ng-style="{\'background-color\': task.color}"></div>\n        <div class="gantt-task-content" unselectable="on"><span unselectable="on"/>{{task.content}}</div>\n        <!--<gantt-task-content></gantt-task-content>-->\n    </div>\n    <!--<div ng-if="dragActive" ng-class="(task.isMilestone === true && [\'gantt-task-milestone\'] || [\'gantt-task\']).concat(task.classes)"-->\n         <!--ng-style="{\'height\': \'1.6em\', \'width\': task.width +\'em\', \'z-index\': 1000, \'background-color\': task.color}">-->\n        <!--&lt;!&ndash;<gantt-bounds template-url="template/default.bouds.tmpl.html" ng-if="task.bounds !== undefined" ng-model="task"></gantt-bounds>&ndash;&gt;-->\n        <!--&lt;!&ndash;<gantt-tooltip template-url="template/default.tooltip.tmpl.html" ng-if="showTooltips && (task.isMouseOver || task.isMoving)" ng-model="task"></gantt-tooltip>&ndash;&gt;-->\n        <!--<div class="gantt-task-content"><span>{{ (task.isMilestone === true && \'&nbsp;\' || task.subject) }}</span></div>-->\n    <!--</div>-->\n</div>\n')}]);
//# sourceMappingURL=angular-gantt-dragtask-plugin.min.js.map